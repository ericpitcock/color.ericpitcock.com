var Color={colors:{red:[],orange:[],yellow:[],green:[],blue:[],purple:[],pink:[],grayscale:["#000000","#303030","#616161","#919191","#C2C2C2","#F2F2F2"]},currentPalette:"palette-1",palettes:{"palette-1":[],"palette-2":[],"palette-3":[],"palette-4":[],"palette-5":[],"palette-6":[]},generateColors:function(t){for(var e in t){if("grayscale"==e)return!0;Color.colors[e]=randomColor({hue:e,luminosity:"bright",count:12})}},createSwatches:function(t){for(var e in t)for(var a in t[e])$("#"+e).append('<div class="swatch '+e+'" data-swatch-color="'+t[e][a]+'" style="background-color: '+t[e][a]+'"></div>')},clearPalette:function(){var t=Color.currentPalette;Color.palettes[t]=[],$(".palettes .active").empty(),$(".in-"+t).removeClass("in-"+t).hide().show(0).find("span."+t).remove(),Color.paletteCheck()},handlePaletteSwitch:function(t){Color.currentPalette=$(t.target).attr("data-target").replace("#",""),Color.paletteCheck()},handleSwatchClick:function(t){var e=$(this),a=e.data("swatch-color"),o=Color.currentPalette,l=Color.palettes[o];if($(t.target).parent().hasClass("tab-pane"))e.hasClass("in-"+o)||(e.clone(!0).empty().appendTo(".palettes .active"),e.addClass("in-"+o),l.push(a));else if($(t.target).parents().hasClass("palettes")){$(".tab-pane").children('*[data-swatch-color="'+a+'"]').removeClass("in-"+Color.currentPalette);var r=l.indexOf(a);-1!=r&&l.splice(r,1),e.remove()}Color.paletteCheck()},paletteCheck:function(){var t=Color.palettes[Color.currentPalette],e=$('.palette-tabs .active a[data-target="#'+Color.currentPalette+'"]'),a=$(".palette-control button"),o=$(".palettes p");t.length>0?(e.addClass("has-swatches"),a.removeClass("disabled"),o.hide()):0===t.length&&(e.removeClass("has-swatches"),a.addClass("disabled"),o.show())},clipboardNotification:function(){$(".clipboard-notification").fadeIn().delay(2e3).fadeOut("slow")},initialize:function(){"ontouchstart"in document.documentElement||(document.documentElement.className+="no-touch"),Color.generateColors(Color.colors),Color.createSwatches(Color.colors),$('ul.color-sets li a[data-toggle="tab"]').on("shown.bs.tab",function(t){window.scrollTo(0,0)}),$(".swatch").on("click",Color.handleSwatchClick),$(".clear-palette").on("click",Color.clearPalette),$(".add-color-set").on("click",Color.addColorSet),$(".palette-tabs").on("click","li a:not(.add-palette)",Color.handlePaletteSwitch),$("h1").click(function(){$(".about-overlay").fadeIn()}),$(".about-overlay").click(function(t){t.target===this&&$(this).fadeOut()}),$(function(){FastClick.attach(document.body)}),$(".palettes > div").sortable({containment:".palettes",opacity:.5,tolerance:"pointer"})}};$(document).ready(function(){Color.initialize()});
//# sourceMappingURL=data:application/json;base64,
